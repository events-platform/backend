plugins {
    id 'java'
    id 'org.springframework.boot' version '3.0.4'
    id 'io.spring.dependency-management' version '1.1.0'
    id("io.freefair.lombok") version "8.0.1"
}

group = 'com.example'
version = '0.0.962'
sourceCompatibility = '17'

configurations {
    compileOnly {
        extendsFrom annotationProcessor
    }
}

repositories {
    mavenCentral()
}

dependencies {
    implementation 'org.springframework.boot:spring-boot-starter-web'
    implementation 'org.springdoc:springdoc-openapi-starter-webmvc-ui:2.0.4'
    implementation 'org.springframework.boot:spring-boot-starter-security'
    implementation 'org.springframework.boot:spring-boot-starter-data-jpa'
    implementation 'org.springframework.boot:spring-boot-starter-validation'

    implementation 'org.postgresql:postgresql:42.2.27'
    implementation 'com.amazonaws:aws-java-sdk-s3:1.12.455'
    implementation 'org.springframework.data:spring-data-redis:3.0.3'
    implementation 'redis.clients:jedis:4.3.1'

    implementation 'com.google.guava:guava:31.1-jre'
    implementation 'javax.xml.bind:jaxb-api:2.3.1'

    implementation "io.jsonwebtoken:jjwt-api:0.11.1"
    implementation 'io.jsonwebtoken:jjwt-impl:0.11.5'
    implementation "io.jsonwebtoken:jjwt-jackson:0.11.1"

    implementation 'org.mapstruct:mapstruct:1.5.4.Final'
    annotationProcessor 'org.mapstruct:mapstruct-processor:1.5.4.Final'

    compileOnly 'org.projectlombok:lombok'
    annotationProcessor 'org.projectlombok:lombok'

    testImplementation 'com.h2database:h2'
    testImplementation 'org.junit.jupiter:junit-jupiter-engine:5.8.2'
    testImplementation 'org.springframework.boot:spring-boot-starter-test'
}

jar {
    enabled = false
}

tasks.named('test') {
    useJUnitPlatform()
}

task buildDocker(type: Exec) {
    dependsOn build
    workingDir "$projectDir"
    commandLine 'docker', 'build', '--rm', '.',
            '-t', "nobodyknowsdotcom/events-platform-backend:${project.version}",
            '-t', 'nobodyknowsdotcom/events-platform-backend:latest',
            '-f', "$projectDir/src/main/docker/Dockerfile"
}

task pushDocker(type: Exec) {
    workingDir "$projectDir"
    commandLine 'docker', 'push', "nobodyknowsdotcom/events-platform-backend:${project.version}"
    commandLine 'docker', 'push', 'nobodyknowsdotcom/events-platform-backend', '-a'
}

